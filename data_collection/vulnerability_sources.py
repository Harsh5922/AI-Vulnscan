import requests
from bs4 import BeautifulSoup

class NVD:
    def __init__(self):
        self.url = 'https://services.nvd.nist.gov/rest/json/cves/1.0'
        self.params = {'resultsPerPage': 1000, 'startIndex': 0}
        self.headers = {"Accept": "application/json"}

    def get_vulnerabilities(self):
        try:
            response = requests.get(self.url, params=self.params)
            response.raise_for_status()  # Raise an HTTPError for bad responses (4xx and 5xx)
            
            # Check content type
            content_type = response.headers.get('Content-Type', '').lower()
            
            if 'application/json' in content_type:
                try:
                    data = response.json()
                    return data.get('result', {}).get('CVE_Items', [])
                except ValueError as e:
                    print(f"Error decoding JSON: {e}")
                    print(f"Response content: {response.content}")
                    return []
            elif 'text/html' in content_type:
                # Parse HTML response
                soup = BeautifulSoup(response.content, 'html.parser')
                vulnerabilities = self.parse_html(soup)
                return vulnerabilities
            else:
                print("Unexpected content type:", content_type)
                print("Response content:", response.content)
                return []
        except requests.RequestException as e:
            print(f"Error fetching NVD vulnerabilities: {e}")
            return []

    def parse_html(self, soup):
        vulnerabilities = []
        # Parse HTML here to extract relevant information
        return vulnerabilities
